name: Build

on:
  workflow_dispatch:
    inputs:
      revision:
        description: 'Revision'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Install depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git "$HOME\depot_tools"

      - name: Build flutter
        env:
          DEPOT_TOOLS_WIN_TOOLCHAIN: "0"
        run: |
          $env:PATH="$HOME\depot_tools;$env:PATH"

          git config --system core.longpaths true

          git clone https://github.com/flutter/flutter.git
          cd flutter
          git checkout '${{ inputs.revision }}'
          cp engine/scripts/standard.gclient .gclient
          gclient sync

          cd engine/src
          $env:PATH="$(pwd)\flutter\bin;$env:PATH"
          et build --config host_release //flutter/lib/snapshot:generate_snapshot_bin
          et build --config host_release //flutter/shell/platform/embedder:flutter_engine

          mkdir dist
          cp out/host_release/flutter_embedder.h      dist/
          cp out/host_release/flutter_engine.dll      dist/
          cp out/host_release/flutter_engine.dll.lib  dist/
          cp out/host_release/gen_snapshot.exe        dist/

          git rev-parse HEAD > dist/commit

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64-embedder-release
          path: flutter/engine/src/dist/*

  release:
    runs-on: ubuntu-20.04
    needs: build
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Setup git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create git tag
        id: create-git-tag
        run: |
          commit="$(cat windows-x64-embedder-release/commit)"
          tag="build-$commit"
          git tag $tag
          git push origin $tag
          echo "TAG=$tag" >> $env:GITHUB_OUTPUT
          echo "COMMIT=$commit" >> $env:GITHUB_OUTPUT

      - name: Prepare artifacts
        run: |
          ls -R
          cd windows-x64-embedder-release
          zip -r ../windows-x64-embedder-release.zip *

      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ steps.create-git-tag.outputs.TAG }} windows-x64-embedder-release.zip \
            -n "flutter/flutter@${{ steps.create-git-tag.outputs.COMMIT }}"
